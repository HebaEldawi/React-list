{"version":3,"sources":["images/logo.svg","components/Menu.js","components/Login.js","components/AddEditItems.js","components/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Menu","menuItems","this","recursiveRenderChildren","menuData","categories","react_default","a","createElement","className","PanelGroup","accordion","id","children","that","undefined","map","child","Panel","key","toString","eventKey","Heading","Title","toggle","name","price","Body","collapsible","description","items","React","Component","Login","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","value","handleSubmit","onUserChange","state","email","password","history","push","length","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","onChange","Button","disabled","validateForm","AddEditItems","createNewCategory","preventDefault","category","Date","getTime","refs","categoryName","menu","onItemAdd","catId","e","inputName","inputPrice","inputDesc","item","onItemUpdate","categoryIndex","stopPropagation","index","findIndex","splice","onItemDelete","require","ref","placeholder","onClick","keys","_this2","itemKey","_this3","defaultValue","bind","AppRouter","BrowserRouter","NavLink","to","src","logo","alt","activeClassName","Route","path","exact","render","routeProp","Login_Login","assign","component","App","AppRouter_AppRouter","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02d026bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b14ed594.svg\";","import React from 'react';\r\nimport menuData from \"./Butcher's burger menu-2.json\";\r\nimport { PanelGroup, Panel } from 'react-bootstrap';\r\n\r\nexport default class Menu extends React.Component {\r\n\r\n    render() {\r\n\r\n        let menuItems = this.recursiveRenderChildren(menuData.categories);\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h3>Butcher's Burger Menu</h3>\r\n                <PanelGroup accordion id=\"menuPanel\" >{menuItems}</PanelGroup>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    /* Recursive function to loop through menu items and check for children */\r\n\r\n    recursiveRenderChildren(children) {\r\n        let that = this;\r\n        /* checker to stop recurssion if no submenu items present*/\r\n        if (children !== undefined || children > 0) {\r\n            return children.map((child) =>\r\n                (\r\n                    <Panel key={child.id.toString()} eventKey={child.id.toString()}>\r\n                        <Panel.Heading><i className=\"fa fa-times\"></i>\r\n                            <Panel.Title toggle><div><i className=\"glyphicon glyphicon-align-justify\"></i> <h5>{child.name}</h5> <em className=\"pull-right\">{child.price}</em></div></Panel.Title>\r\n                        </Panel.Heading>\r\n                        <Panel.Body collapsible>\r\n                            {child.description}\r\n\r\n                            <PanelGroup accordion id=\"subMenuPanel\">\r\n                                {that.recursiveRenderChildren(child.items)}\r\n                            </PanelGroup>\r\n                        </Panel.Body>\r\n                    </Panel>\r\n                )\r\n            );\r\n\r\n        }\r\n    }\r\n}\r\n","import 'babel-polyfill';\r\nimport React from 'react';\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nexport default class Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            email: \"\",\r\n            password: \"\"\r\n\r\n        };\r\n    }\r\n    validateForm() {\r\n        return this.state.email.length > 0 && this.state.password.length > 0;\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        this.props.onUserChange(this.state.email, this.state.password);\r\n        this.props.history.push('/view/');\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"login container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormGroup controlId=\"email\" bsSize=\"large\">\r\n                        <ControlLabel>Email</ControlLabel>\r\n                        <FormControl\r\n                            autoFocus\r\n                            type=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup controlId=\"password\" bsSize=\"large\">\r\n                        <ControlLabel>Password</ControlLabel>\r\n                        <FormControl\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            type=\"password\"\r\n                        />\r\n                    </FormGroup>\r\n                    <Button\r\n                        className=\"login-btn btn btn-primary\"\r\n                        bsSize=\"large\"\r\n                        disabled={!this.validateForm()}\r\n                        type=\"submit\">\r\n                        Login\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import 'babel-polyfill';\r\nimport React from 'react';\r\nimport menuData from \"./Butcher's burger menu-2.json\";\r\nimport { PanelGroup, Panel } from 'react-bootstrap';\r\n\r\nexport default class AddEditItems extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            menu: menuData\r\n        };\r\n\r\n    }\r\n\r\n    // Creating a new category in menu\r\n    createNewCategory = event => {\r\n        event.preventDefault();\r\n        //create a unique key for each new category \r\n        var timestamp = (new Date()).getTime();\r\n        //populate new category with name from form, id from timestamp\r\n        let category = {\r\n            id: timestamp,\r\n            name: this.refs.categoryName.value,\r\n            items: []\r\n        }\r\n        // update the state object\r\n        this.state.menu.categories.push(category);\r\n        // set the state\r\n        this.setState({ menu: this.state.menu });\r\n    }\r\n\r\n    //Adding new item inside a category of index key\r\n    onItemAdd = (catId, key, e) => {\r\n        e.preventDefault();\r\n        //create a unique key for each new category item\r\n        let timestamp = (new Date()).getTime();\r\n        let inputName = \"itemName\" + catId;\r\n        let inputPrice = \"itemPrice\" + catId;\r\n        let inputDesc = \"itemDescription\" + catId;\r\n        let item = {\r\n            id: timestamp,\r\n            name: this.refs[inputName].value,\r\n            description: this.refs[inputDesc].value,\r\n            price: this.refs[inputPrice].value,\r\n        }\r\n        // add new item to state object\r\n        this.state.menu.categories[key].items.push(item);\r\n\r\n        // set the state\r\n        this.setState({ menu: this.state.menu });\r\n    }\r\n\r\n    //Updating item of id inside a category of index categoryIndex\r\n    onItemUpdate = (categoryIndex, catId, id, e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        //get index of item by its id\r\n        var index = this.state.menu.categories[categoryIndex].items.findIndex(item => item.id === id);\r\n        let inputName = \"updateItemName\" + catId + id;\r\n        let inputPrice = \"updateItemPrice\" + catId + id;\r\n        let inputDesc = \"updateItemDescription\" + catId + id;\r\n        let item = {\r\n            id: id,\r\n            name: this.refs[inputName].value,\r\n            description: this.refs[inputDesc].value,\r\n            price: this.refs[inputPrice].value,\r\n        }\r\n        // replacing object inside state\r\n        this.state.menu.categories[categoryIndex].items.splice(index, 1, item);\r\n\r\n        // set the state\r\n        this.setState({ menu: this.state.menu });\r\n    }\r\n\r\n    //Delete item of id inside a category of index categoryIndex\r\n    onItemDelete = (categoryIndex, id, e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        //get index of item by its id   \r\n        var index = this.state.menu.categories[categoryIndex].items.findIndex(item => item.id === id);\r\n        // deleting object \r\n        this.state.menu.categories[categoryIndex].items.splice(index, 1);\r\n        // set the state\r\n        this.setState({ menu: this.state.menu });\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <section className=\"form-container form-inline\">\r\n                    <h4>Add Category</h4>\r\n                    <input require=\"true\" type=\"text\" ref=\"categoryName\" key=\"cat-name\" placeholder=\"Category name\" className=\"form-control\" />\r\n                    <button onClick={this.createNewCategory} className=\"btn btn-forms\"> Create category</button>\r\n                </section>\r\n                <section className=\"menu-container\">\r\n                    <h3>Menu Data</h3>\r\n                    <PanelGroup id=\"mainPanel\" key=\"categorySections\" accordion>\r\n\r\n                        <div className=\"container-fluid\" >\r\n                            <ul className=\"list-group\">\r\n                                {\r\n                                    Object.keys(this.state.menu.categories).map(function (key) {\r\n                                        return (\r\n\r\n                                            <Panel eventKey={this.state.menu.categories[key].id.toString()} key={this.state.menu.categories[key].id.toString()}>\r\n                                                <Panel.Heading>\r\n                                                    <Panel.Title toggle><div><i className=\"glyphicon glyphicon-align-justify\"></i> <h4>{this.state.menu.categories[key].name}</h4></div></Panel.Title>\r\n                                                </Panel.Heading>\r\n                                                <Panel.Body collapsible>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"form-group col-md-3\">\r\n                                                            <label>Name*</label>\r\n                                                            <label className=\"data-lbl\"> {this.state.menu.categories[key].name}</label>\r\n                                                        </div>\r\n                                                        <div className=\"form-group col-md-3\">\r\n                                                            <label>Description</label>\r\n                                                            {this.state.menu.categories[key].description === \"\" || this.state.menu.categories[key].description === undefined ? <label className=\"empty-lbl\">Empty</label> : <label className=\"data-lbl\">{this.state.menu.categories[key].description}</label>}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group row\">\r\n                                                        <label className=\"col-md-12\">Items</label>\r\n                                                        <div className=\"form-group col-md-3\">\r\n\r\n                                                            <input require=\"true\" type=\"text\" ref={\"itemName\" + this.state.menu.categories[key].id} placeholder=\"Name\" className=\"form-control\" />\r\n                                                        </div>\r\n                                                        <div className=\"form-group col-md-3\">\r\n                                                            <input require=\"true\" type=\"text\" ref={\"itemPrice\" + this.state.menu.categories[key].id} placeholder=\"Price\" className=\"form-control\" />\r\n                                                        </div>\r\n                                                        <div className=\"form-group col-md-3\">\r\n                                                            <textarea placeholder=\"Description\" ref={\"itemDescription\" + this.state.menu.categories[key].id} className=\"form-control\" />\r\n                                                        </div>\r\n                                                        <button onClick={(e) => this.onItemAdd(this.state.menu.categories[key].id, key, e)} className=\" btn btn-forms\" >Create</button>\r\n                                                    </div>\r\n\r\n                                                    <PanelGroup className=\"row\" id={this.state.menu.categories[key].id.toString()} accordion key={this.state.menu.categories[key].id.toString()}>\r\n                                                        {\r\n                                                            Object.keys(this.state.menu.categories[key].items).map(function (itemKey) {\r\n                                                                return (\r\n                                                                    <Panel eventKey={this.state.menu.categories[key].items[itemKey].id.toString()} key={this.state.menu.categories[key].items[itemKey].id.toString()}>\r\n                                                                        <Panel.Heading>\r\n                                                                            <Panel.Title toggle>\r\n                                                                                <div><i className=\"glyphicon glyphicon-align-justify\"></i> <h5>{this.state.menu.categories[key].items[itemKey].name}</h5>\r\n                                                                                    <div className=\"panel-actions pull-right\">\r\n                                                                                        <button onClick={(e) => this.onItemDelete(key, this.state.menu.categories[key].items[itemKey].id, e)} className=\"btn btn-secondry\">Delete</button>\r\n                                                                                    </div></div>\r\n                                                                            </Panel.Title>\r\n\r\n                                                                        </Panel.Heading>\r\n                                                                        <Panel.Body collapsible >\r\n\r\n                                                                            <div className=\"item-view\">\r\n                                                                                <div className=\"form-group col-md-3\">\r\n                                                                                    <label>Name*</label>\r\n                                                                                    <input require=\"true\" type=\"text\" defaultValue={this.state.menu.categories[key].items[itemKey].name} ref={\"updateItemName\" + this.state.menu.categories[key].id + this.state.menu.categories[key].items[itemKey].id} placeholder=\"Name\" className=\"form-control\" />\r\n                                                                                </div>\r\n                                                                                <div className=\"form-group col-md-3\">\r\n                                                                                    <label>Price</label>\r\n                                                                                    <input require=\"true\" type=\"text\" defaultValue={this.state.menu.categories[key].items[itemKey].price} ref={\"updateItemPrice\" + this.state.menu.categories[key].id + this.state.menu.categories[key].items[itemKey].id} placeholder=\"Price\" className=\"form-control\" />\r\n                                                                                </div>\r\n                                                                                <div className=\"form-group col-md-6\">\r\n                                                                                    <label>Description</label>\r\n                                                                                    <textarea placeholder=\"Description\" defaultValue={this.state.menu.categories[key].items[itemKey].description} ref={\"updateItemDescription\" + this.state.menu.categories[key].id + this.state.menu.categories[key].items[itemKey].id} className=\"form-control\" />\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <button onClick={(e) => this.onItemUpdate(key, this.state.menu.categories[key].id, this.state.menu.categories[key].items[itemKey].id, e)} className=\" btn btn-primary pull-right\" >Update</button>\r\n\r\n                                                                        </Panel.Body>\r\n                                                                    </Panel>\r\n                                                                )\r\n                                                            }.bind(this)\r\n                                                            )\r\n                                                        }\r\n\r\n\r\n\r\n                                                    </PanelGroup>\r\n                                                </Panel.Body>\r\n                                            </Panel>\r\n                                        )\r\n                                    }.bind(this)\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </PanelGroup>\r\n                </section>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import 'babel-polyfill';\r\nimport React from \"react\";\r\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\r\nimport logo from '../images/logo.svg';\r\nimport Menu from './Menu';\r\nimport Login from './Login';\r\nimport AddEditItems from './AddEditItems';\r\n\r\nexport default class AppRouter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            email: \"\",\r\n            password: \"\"\r\n\r\n        };\r\n    }\r\n\r\n    onUserChange = (email, password) => {\r\n        this.setState({\r\n            email: email,\r\n            password: password\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div>\r\n                    <header className=\"app-header\">\r\n                        <h1 className=\"app-logo\"> <NavLink to=\"/view/\"><img src={logo} alt=\"elmenus logo\" /></NavLink></h1>\r\n                        {this.state.email !== \"\" ? (\r\n                            <nav>\r\n                                <ul>\r\n                                    <li>\r\n                                        <NavLink activeClassName=\"selected\" to=\"/view/\">View Menu</NavLink>\r\n                                    </li>\r\n                                    {this.state.email === \"admin@admin.admin\" ? (\r\n                                        <li>\r\n                                            <NavLink className=\"pull-right\" to=\"/addEdit/\">Edit Menu</NavLink>\r\n                                        </li>\r\n                                    ) : null}\r\n                                </ul>\r\n                            </nav>\r\n                        ) : null}\r\n                        {this.state.email !== \"\" ? (<NavLink className=\"pull-right user-data\" to=\"/login/\">Logout as {this.state.email}</NavLink>\r\n                        ) : null}\r\n                    </header>\r\n                    <div className=\"body-container\">\r\n                        <Route path=\"/\" exact render={(routeProp) => <Login onUserChange={this.onUserChange}  {...routeProp} />} />\r\n                        <Route path=\"/login/\" render={(routeProp) => <Login onUserChange={this.onUserChange}  {...routeProp} />} />\r\n                        <Route path=\"/view/\" component={Menu} />\r\n                        <Route path=\"/addEdit/\" component={AddEditItems} />\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n\r\n}\r\n","import 'babel-polyfill';\nimport React, { Component } from 'react';\nimport './styles/App.css';\nimport AppRouter from './components/AppRouter';\n\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <AppRouter />\n\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}